local NovaHub = loadstring(game:HttpGet("https://raw.githubusercontent.com/NovaHubOnTop/Private/refs/heads/main/Library"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = NovaHub:CreateWindow({
    Title = "Nova Hub Paid Version" .. Fluent.Version,
    SubTitle = "by Encrypted",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "NovaHub",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when there's no MinimizeKeybind
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "settings" })
}

-- Discord Server Button
Tabs.Main:AddButton({
    Title = "Discord Server",
    Description = "Copy discord server link",
    Callback = function()
        setclipboard("https://discord.gg/ztGskBVU")
        Window:Dialog({
            Title = "Discord Link Copied",
            Content = "The Discord server link has been copied to your clipboard.",
            Buttons = {
                { Title = "OK", Callback = function() end }
            }
        })
    end
})

-- WalkSpeed Input
local WalkSpeedInput = Tabs.Main:AddInput("WalkSpeed", {
    Title = "WalkSpeed",
    Default = "16",
    Placeholder = "Enter WalkSpeed",
    Numeric = true,
    Finished = true,
    Callback = function(Value) end
})

Tabs.Main:AddButton({
    Title = "Apply WalkSpeed",
    Description = "Apply the entered WalkSpeed",
    Callback = function()
        local walkSpeedValue = tonumber(WalkSpeedInput.Value)
        if walkSpeedValue then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeedValue
            Window:Dialog({
                Title = "WalkSpeed Applied",
                Content = "WalkSpeed has been set to " .. walkSpeedValue,
                Buttons = { { Title = "OK", Callback = function() end } }
            })
        else
            Window:Dialog({
                Title = "Invalid Input",
                Content = "Please enter a valid number for WalkSpeed.",
                Buttons = { { Title = "OK", Callback = function() end } }
            })
        end
    end
})

-- JumpPower Input
local JumpPowerInput = Tabs.Main:AddInput("JumpPower", {
    Title = "JumpPower",
    Default = "50",
    Placeholder = "Enter JumpPower",
    Numeric = true,
    Finished = true,
    Callback = function(Value) end
})

Tabs.Main:AddButton({
    Title = "Apply JumpPower",
    Description = "Apply the entered JumpPower",
    Callback = function()
        local jumpPowerValue = tonumber(JumpPowerInput.Value)
        if jumpPowerValue then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
            Window:Dialog({
                Title = "JumpPower Applied",
                Content = "JumpPower has been set to " .. jumpPowerValue,
                Buttons = { { Title = "OK", Callback = function() end } }
            })
        else
            Window:Dialog({
                Title = "Invalid Input",
                Content = "Please enter a valid number for JumpPower.",
                Buttons = { { Title = "OK", Callback = function() end } }
            })
        end
    end
})

-- AutoFarm Tab with City, Orb, and Farming Mode Dropdowns
Tabs.AutoFarm:AddParagraph({
    Title = "Auto Farming",
    Content = "Automate orb collection and farming actions."
})

local CityDropdown = Tabs.AutoFarm:AddDropdown("Select City", {
    Title = "Select City",
    Values = {"City", "Snow City", "Magma City", "Jungle City"},
    Multi = false,
    Default = 1,
})

CityDropdown:SetValue("City")

local OrbDropdown = Tabs.AutoFarm:AddDropdown("Select Orb", {
    Title = "Select Orb",
    Values = {"Red Orb", "Orange Orb", "Blue Orb", "Yellow Orb", "Gems", "Ethereal Orb"},
    Multi = false,
    Default = 1,
})

OrbDropdown:SetValue("Red Orb")

local FarmingModeDropdown = Tabs.AutoFarm:AddDropdown("Select Farming Mode", {
    Title = "Select Farming Mode",
    Values = {"Slow", "Normal", "Fast", "Super Fast"},
    Multi = false,
    Default = 1,
})

FarmingModeDropdown:SetValue("Normal")

-- Toggle for Farming
local Toggle = Tabs.AutoFarm:AddToggle("Start Farming", {Title = "Start Farming", Default = false})

Toggle:OnChanged(function()
    local city = CityDropdown.Value
    local orb = OrbDropdown.Value
    
    if Toggle.Value then
        -- Use spawn to avoid freezing the UI during farming loop
        spawn(function()
            while Toggle.Value do
                local args = {
                    [1] = "collectOrb",
                    [2] = orb, 
                    [3] = city
                }

                game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer(unpack(args))
                
                wait(0.1)
            end
        end)
    end
end)
