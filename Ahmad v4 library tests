local NovaHub = loadstring(game:HttpGet("https://raw.githubusercontent.com/NovaHubOnTop/Private/refs/heads/main/Library"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = NovaHub:CreateWindow({
    Title = "Nova Hub Paid Version" .. Fluent.Version,
    SubTitle = "by Encrypted",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "NovaHub",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Home = Window:AddTab({ Title = "Home", Icon = "" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "settings" }),
    Eggs = Window:AddTab({ Title = "Eggs", Icon = "egg" }),
    
}

-- Discord Server Button
Tabs.Home:AddButton({
    Title = "Discord Server",
    Description = "Copy discord server link",
    Callback = function()
        setclipboard("https://discord.gg/ztGskBVU")
        Window:Dialog({
            Title = "Discord Link Copied",
            Content = "The Discord server link has been copied to your clipboard.",
            Buttons = {
                { Title = "OK", Callback = function() print("User acknowledged the dialog.") end }
            }
        })
    end
})

Tabs.Home:AddParagraph({
    Title = "Local Player",
    Content = ""
})

-- WalkSpeed Input
local WalkSpeedInput = Tabs.Home:AddInput("WalkSpeed", {
    Title = "WalkSpeed",
    Default = "16",
    Placeholder = "Enter WalkSpeed",
    Numeric = true,
    Finished = true,
    Callback = function(Value) print("WalkSpeed input changed:", Value) end
})

WalkSpeedInput:OnChanged(function() print("WalkSpeed input updated:", WalkSpeedInput.Value) end)

Tabs.Home:AddButton({
    Title = "Apply WalkSpeed",
    Description = "Apply the entered WalkSpeed",
    Callback = function()
        local walkSpeedValue = tonumber(WalkSpeedInput.Value)
        if walkSpeedValue then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeedValue
            Window:Dialog({
                Title = "WalkSpeed Applied",
                Content = "WalkSpeed has been set to " .. walkSpeedValue,
                Buttons = { { Title = "OK", Callback = function() print("WalkSpeed applied.") end } }
            })
        else
            Window:Dialog({
                Title = "Invalid Input",
                Content = "Please enter a valid number for WalkSpeed.",
                Buttons = { { Title = "OK", Callback = function() print("Invalid WalkSpeed input.") end } }
            })
        end
    end
})

-- JumpPower Input
local JumpPowerInput = Tabs.Home:AddInput("JumpPower", {
    Title = "JumpPower",
    Default = "50",
    Placeholder = "Enter JumpPower",
    Numeric = true,
    Finished = true,
    Callback = function(Value) print("JumpPower input changed:", Value) end
})

JumpPowerInput:OnChanged(function() print("JumpPower input updated:", JumpPowerInput.Value) end)

Tabs.Home:AddButton({
    Title = "Apply JumpPower",
    Description = "Apply the entered JumpPower",
    Callback = function()
        local jumpPowerValue = tonumber(JumpPowerInput.Value)
        if jumpPowerValue then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
            Window:Dialog({
                Title = "JumpPower Applied",
                Content = "JumpPower has been set to " .. jumpPowerValue,
                Buttons = { { Title = "OK", Callback = function() print("JumpPower applied.") end } }
            })
        else
            Window:Dialog({
                Title = "Invalid Input",
                Content = "Please enter a valid number for JumpPower.",
                Buttons = { { Title = "OK", Callback = function() print("Invalid JumpPower input.") end } }
            })
        end
    end
})

-- AutoFarm Tab
Tabs.AutoFarm:AddParagraph({
    Title = "Auto Farming",
    Content = ""
})

local CityDropdown = Tabs.AutoFarm:AddDropdown("Select City", {
    Title = "Select City",
    Values = {"City", "Snow City", "Magma City", "Jungle City"},
    Multi = false,
    Default = 1
})
CityDropdown:SetValue("City")

local OrbDropdown = Tabs.AutoFarm:AddDropdown("Select Orb", {
    Title = "Select Orb",
    Values = {"Red Orb", "Orange Orb", "Blue Orb", "Yellow Orb", "Gems", "Ethereal Orb"},
    Multi = false,
    Default = 1
})
OrbDropdown:SetValue("Red Orb")

local FarmingModeDropdown = Tabs.AutoFarm:AddDropdown("Select Farming Mode", {
    Title = "Select Farming Mode",
    Values = {"Slow", "Normal", "Fast", "Super Fast"},
    Multi = false,
    Default = 1
})
FarmingModeDropdown:SetValue("Normal")

local Toggle = Tabs.AutoFarm:AddToggle("Start Farming", {Title = "Start Farming", Default = false})

Toggle:OnChanged(function()
    local city = CityDropdown.Value
    local orb = OrbDropdown.Value
    local farmingMode = FarmingModeDropdown.Value

    if Toggle.Value then
        local loopCount = farmingMode == "Normal" and 50 or farmingMode == "Fast" and 100 or 200
        while Toggle.Value do
            local args = { [1] = "collectOrb", [2] = orb, [3] = city }
            for i = 1, loopCount do
                game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("orbEvent"):FireServer(unpack(args))
            end
            wait(0.3)
        end
    end
end)

-- Anti Lag Button
Tabs.AutoFarm:AddButton({
    Title = "Anti Lag",
    Description = "Improves FPS by disabling certain features.",
    Callback = function()
        local decalsyeeted = true
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end
})

